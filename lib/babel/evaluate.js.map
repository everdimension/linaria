{"version":3,"sources":["../../src/babel/evaluate.js"],"names":["generator","require","default","babel","Module","resolve","path","t","requirements","binding","scope","getBinding","node","name","isReferenced","kind","some","req","result","isImportSpecifier","importDeclaration","parentPath","source","variableDeclaration","loc","push","start","end","traverse","Identifier","p","module","exports","evaluate","filename","transformer","options","isIdentifier","dependencies","reduce","deps","isImportDeclaration","value","CallExpression","callee","args","arguments","length","type","quasis","cooked","expression","expressionStatement","assignmentExpression","memberExpression","identifier","sort","a","b","line","column","acc","curr","imports","others","unshift","wrapped","blockStatement","m","transform","text","ignore","test","code","transformSync","caller","presets","plugins","map","String","raw","join"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport type { Options as PluginOptions } from './extract';\n\nconst generator = require('@babel/generator').default;\nconst babel = require('@babel/core');\nconst Module = require('./module');\n\nconst resolve = (path, t, requirements) => {\n  const binding = path.scope.getBinding(path.node.name);\n\n  if (\n    path.isReferenced() &&\n    binding &&\n    binding.kind !== 'param' &&\n    !requirements.some(req => req.path === binding.path)\n  ) {\n    let result;\n\n    switch (binding.kind) {\n      case 'module':\n        if (t.isImportSpecifier(binding.path)) {\n          result = t.importDeclaration(\n            [binding.path.node],\n            binding.path.parentPath.node.source\n          );\n        } else {\n          result = binding.path.parentPath.node;\n        }\n        break;\n      case 'const':\n      case 'let':\n      case 'var': {\n        result = t.variableDeclaration(binding.kind, [binding.path.node]);\n        break;\n      }\n      default:\n        result = binding.path.node;\n        break;\n    }\n\n    const { loc } = binding.path.node;\n\n    requirements.push({\n      result,\n      path: binding.path,\n      start: loc.start,\n      end: loc.end,\n    });\n\n    binding.path.traverse({\n      Identifier(p) {\n        resolve(p, t, requirements);\n      },\n    });\n  }\n};\n\nmodule.exports = function evaluate(\n  path: any,\n  t: any,\n  filename: string,\n  transformer?: (text: string) => { code: string },\n  options?: PluginOptions\n) {\n  const requirements = [];\n\n  if (t.isIdentifier(path)) {\n    resolve(path, t, requirements);\n  } else {\n    path.traverse({\n      Identifier(p) {\n        resolve(p, t, requirements);\n      },\n    });\n  }\n\n  // Collect the list of dependencies that we import\n  const dependencies = requirements.reduce((deps, req) => {\n    if (t.isImportDeclaration(req.path.parentPath)) {\n      deps.push(req.path.parentPath.node.source.value);\n    } else {\n      req.path.traverse({\n        CallExpression(p) {\n          const { callee, arguments: args } = p.node;\n\n          let name;\n\n          if (callee.name === 'require' && args.length === 1) {\n            if (\n              args[0].type === 'Literal' ||\n              args[0].type === 'StringLiteral'\n            ) {\n              name = args[0].value;\n            } else if (\n              args[0].type === 'TemplateLiteral' &&\n              args[0].quasis.length === 1\n            ) {\n              name = args[0].quasis[0].value.cooked;\n            }\n          }\n\n          if (name) {\n            deps.push(name);\n          }\n        },\n      });\n    }\n\n    return deps;\n  }, []);\n\n  const expression = t.expressionStatement(\n    t.assignmentExpression(\n      '=',\n      t.memberExpression(t.identifier('module'), t.identifier('exports')),\n      path.node\n    )\n  );\n\n  // Preserve source order\n  requirements.sort((a, b) => {\n    if (a.start.line === b.start.line) {\n      return a.start.column - b.start.column;\n    }\n\n    return a.start.line - b.start.line;\n  });\n\n  // We'll wrap each code in a block to avoid collisions in variable names\n  // We separate out the imports since they cannot be inside blocks\n  const { imports, others } = requirements.reduce(\n    (acc, curr) => {\n      if (t.isImportDeclaration(curr.path.parentPath)) {\n        acc.imports.push(curr.result);\n      } else {\n        // Add these in reverse because we'll need to wrap in block statements in reverse\n        acc.others.unshift(curr.result);\n      }\n\n      return acc;\n    },\n    { imports: [], others: [] }\n  );\n\n  const wrapped = others.reduce(\n    (acc, curr) => t.blockStatement([curr, acc]),\n    t.blockStatement([expression])\n  );\n\n  const m = new Module(filename);\n\n  m.transform =\n    typeof transformer !== 'undefined'\n      ? transformer\n      : function transform(text) {\n          if (options && options.ignore && options.ignore.test(this.filename)) {\n            return { code: text };\n          }\n\n          return babel.transformSync(text, {\n            caller: { name: 'linaria', evaluate: true },\n            filename: this.filename,\n            presets: [[require.resolve('./index'), options]],\n            plugins: [\n              // Include this plugin to avoid extra config when using { module: false } for webpack\n              '@babel/plugin-transform-modules-commonjs',\n              '@babel/plugin-proposal-export-namespace-from',\n              // We don't support dynamic imports when evaluating, but don't wanna syntax error\n              // This will replace dynamic imports with an object that does nothing\n              require.resolve('./dynamic-import-noop'),\n            ],\n          });\n        };\n\n  m.evaluate(\n    [\n      // Use String.raw to preserve escapes such as '\\n' in the code\n      // Flow doesn't understand template tags: https://github.com/facebook/flow/issues/2616\n      /* $FlowFixMe */\n      imports.map(node => String.raw`${generator(node).code}`).join('\\n'),\n      /* $FlowFixMe */\n      String.raw`${generator(wrapped).code}`,\n    ].join('\\n')\n  );\n\n  return {\n    value: m.exports,\n    dependencies,\n  };\n};\n"],"file":"evaluate.js"}